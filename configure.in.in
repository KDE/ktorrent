#MIN_CONFIG(3.3)
CXXFLAGS="$CXXFLAGS $KDE_DEFAULT_CXXFLAGS $USE_EXCEPTIONS $USE_RTTI"

AM_INIT_AUTOMAKE(ktorrent,2.0dev)

dnl #### Check for FSEEK variants
AC_SYS_LARGEFILE
AC_FUNC_FSEEKO
AC_CHECK_FUNCS(fseeko64, ktorrent_cv_func_fseek64=yes, ktorrent_cv_func_fseek64=no)
AC_CHECK_FUNCS(ftello64, ktorrent_cv_func_ftell64=yes, ktorrent_cv_func_ftell64=no)
AC_CHECK_FUNCS(fstat64, ktorrent_cv_func_fstat64=yes, ktorrent_cv_func_fstat64=no)
AC_CHECK_FUNCS(stat64, ktorrent_cv_func_stat64=yes, ktorrent_cv_func_stat64=no)
AC_CHECK_FUNCS(ftruncate64, ktorrent_cv_func_ftruncate64=yes, ktorrent_cv_func_ftruncate64=no)
AC_CHECK_FUNCS(lseek64, ktorrent_cv_func_lseek64=yes, ktorrent_cv_func_lseek64=no)

if test "$ktorrent_cv_func_fseek64" = yes -a "$ktorrent_cv_func_ftell64" = yes; then
    AC_DEFINE(HAVE_FSEEKO64, 1)
else
    AC_DEFINE(HAVE_FSEEKO64, 0)
fi

if test "$ktorrent_cv_func_fstat64" = yes -a "$ktorrent_cv_func_stat64" = yes ; then
	AC_DEFINE(HAVE_STAT64,1)
else
	AC_DEFINE(HAVE_STAT64,0)
fi

if test "$ktorrent_cv_func_ftruncate64" = yes ; then
	AC_DEFINE(HAVE_FTRUNCATE64,1)
else
	AC_DEFINE(HAVE_FTRUNCATE64,0)
fi

if test "$ktorrent_cv_func_lseek64" = yes ; then
	AC_DEFINE(HAVE_LSEEK64,1)
else
	AC_DEFINE(HAVE_LSEEK64,0)
fi

KDE_CHECK_LIB(gmp, __gmpz_init,	[have_gmp=yes],
	[
		have_gmp=no
		DO_NOT_COMPILE="$DO_NOT_COMPILE ktorrent"
	])

KDE_CHECK_HEADER(gmp.h, [have_gmp=yes], 
	[
		have_gmp=no
		DO_NOT_COMPILE="$DO_NOT_COMPILE ktorrent"
	])

KDE_INIT_DOXYGEN([The API Reference], [Version $VERSION])

AC_ARG_ENABLE(
	memleak-check,
	[AS_HELP_STRING(--enable-memleak-check,[Enable memory leak checking])],
	[CXXFLAGS="$CXXFLAGS -DKT_LEAKTRACE"])

AC_ARG_ENABLE(geoip,
     [  --enable-geoip Enables GeoIP database installation],
     [case "${enableval}" in
       yes) geoip=true ;;
       no)  geoip=false ;;
       *) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;
     esac],[geoip=true])

AM_CONDITIONAL(ENABLE_GEOIP, test x$geoip = xtrue)


