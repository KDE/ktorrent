# Makefile.in generated by unsermake
####################################

top_builddir = ../..
top_srcdir = @top_srcdir@
srcdir = @srcdir@
.FORWARDS: all install install-data install-exec clean check force-reedit

all:
	@echo 'WARNING: use unsermake instead of make or use a wrapper script, e.g. makeobj!!!'
	/home/joris/ktorrent/unsermake/unsermake all

install:
	@echo 'WARNING: use unsermake instead of make or use a wrapper script, e.g. makeobj!!!'
	/home/joris/ktorrent/unsermake/unsermake install

install-data:
	@echo 'WARNING: use unsermake instead of make or use a wrapper script, e.g. makeobj!!!'
	/home/joris/ktorrent/unsermake/unsermake install-data

install-exec:
	@echo 'WARNING: use unsermake instead of make or use a wrapper script, e.g. makeobj!!!'
	/home/joris/ktorrent/unsermake/unsermake install-exec

clean:
	@echo 'WARNING: use unsermake instead of make or use a wrapper script, e.g. makeobj!!!'
	/home/joris/ktorrent/unsermake/unsermake clean

check:
	@echo 'WARNING: use unsermake instead of make or use a wrapper script, e.g. makeobj!!!'
	/home/joris/ktorrent/unsermake/unsermake check

force-reedit:
	@echo 'WARNING: use unsermake instead of make or use a wrapper script, e.g. makeobj!!!'
	/home/joris/ktorrent/unsermake/unsermake force-reedit

$(top_builddir)/plugins/rssfeed/Makefile: $(top_builddir)/config.status $(top_srcdir)/plugins/rssfeed/Makefile.in
	cd $(top_builddir) && $(SHELL) ./config.status plugins/rssfeed/Makefile

$(top_builddir)/plugins/rssfeed/rssfeed.moc.cpp: $(top_srcdir)/plugins/rssfeed/rssfeed.h
	@echo 'creating $(top_builddir)/plugins/rssfeed/rssfeed.moc.cpp'
	@$(MOC) $? -o $@

$(top_builddir)/plugins/rssfeed/rssfeedmanager.moc.cpp: $(top_srcdir)/plugins/rssfeed/rssfeedmanager.h
	@echo 'creating $(top_builddir)/plugins/rssfeed/rssfeedmanager.moc.cpp'
	@$(MOC) $? -o $@

$(top_builddir)/plugins/rssfeed/rssfeedplugin.moc.cpp: $(top_srcdir)/plugins/rssfeed/rssfeedplugin.h
	@echo 'creating $(top_builddir)/plugins/rssfeed/rssfeedplugin.moc.cpp'
	@$(MOC) $? -o $@

$(top_builddir)/plugins/rssfeed/rssfilter.moc.cpp: $(top_srcdir)/plugins/rssfeed/rssfilter.h
	@echo 'creating $(top_builddir)/plugins/rssfeed/rssfilter.moc.cpp'
	@$(MOC) $? -o $@

all: $(top_builddir)/plugins/rssfeed/Makefile
final: 
	/home/joris/ktorrent/unsermake/unsermake -C $(top_builddir)/plugins/rssfeed UNSERMAKE_FORCE_FINAL=1 ktrssfeedplugin.la

INCLUDES = $(all_includes) -I$(top_srcdir)/plugins/rssfeed/../../libktorrent
METASOURCES = rssfilter=./rssfilter.h rssfeedmanager=./rssfeedmanager.h rssfeedplugin=./rssfeedplugin.h rssfeed=./rssfeed.h rssfeedwidget=rssfeedwidget.h=rssfeedwidget.cpp
QT3_UIFILES = rssfeedwidget
__um_includes_kdirlister.h = rssfeedplugin.cpp rssfeedmanager.cpp
__um_includes_keditlistbox.h = rssfeedmanager.cpp
__um_includes_kfileitem.h = rssfeedplugin.cpp rssfeedmanager.cpp
__um_includes_kgenericfactory.h = rssfeedplugin.cpp
__um_includes_kglobal.h = rssfeedplugin.cpp rssfeed.cpp
__um_includes_kiconloader.h = rssfeedplugin.cpp
__um_includes_klocale.h = rssfeedplugin.cpp rssfeedmanager.cpp
__um_includes_kmessagebox.h = rssfeedplugin.cpp
__um_includes_kmimetype.h = rssfeedmanager.cpp
__um_includes_krfcdate.h = rssfeed.cpp
__um_includes_kstandarddirs.h = rssfeed.cpp rssfeedmanager.cpp
__um_includes_kurl.h = rssfeedplugin.cpp rssfeed.cpp rssfeedmanager.cpp rssarticle.cpp rssfilter.cpp
__um_includes_kurlrequester.h = rssfeedmanager.cpp
__um_includes_qapplication.h = rssfeed.cpp rssfeedmanager.cpp
__um_includes_qcheckbox.h = rssfeedmanager.cpp
__um_includes_qdatastream.h = rssfeedplugin.cpp rssfeed.cpp rssfeedmanager.cpp rssarticle.cpp rssfilter.cpp
__um_includes_qdatetime.h = rssfeedplugin.cpp rssfeed.cpp rssfeedmanager.cpp rssarticle.cpp rssfilter.cpp
__um_includes_qdatetimeedit.h = rssfeedmanager.cpp
__um_includes_qdir.h = rssfeedplugin.cpp rssfeedmanager.cpp
__um_includes_qfile.h = rssfeedplugin.cpp rssfeed.cpp rssfeedmanager.cpp
__um_includes_qlineedit.h = rssfeedmanager.cpp
__um_includes_qobject.h = rssfeedplugin.cpp rssfeed.cpp rssfeedmanager.cpp rssfilter.cpp
__um_includes_qptrlist.h = rssfeedplugin.cpp rssfeedmanager.cpp
__um_includes_qregexp.h = rssfeedplugin.cpp rssfeedmanager.cpp rssfilter.cpp
__um_includes_qspinbox.h = rssfeedmanager.cpp
__um_includes_qstring.h = rssfeedplugin.cpp rssfeed.cpp rssfeedmanager.cpp rssarticle.cpp rssfilter.cpp
__um_includes_qtable.h = rssfeedmanager.cpp
__um_includes_qtimer.h = rssfeedplugin.cpp rssfeed.cpp rssfeedmanager.cpp rssfilter.cpp
__um_includes_qvaluelist.h = rssfeedplugin.cpp rssfeed.cpp rssfeedmanager.cpp
__um_includes_qwidget.h = rssfeedplugin.cpp rssfeedmanager.cpp
__um_includes_rssarticle.h = rssfeedplugin.cpp rssfeed.cpp rssfeedmanager.cpp rssarticle.cpp rssfilter.cpp
__um_includes_rssfeed.h = rssfeedplugin.cpp rssfeed.cpp rssfeedmanager.cpp
__um_includes_rssfeedmanager.h = rssfeedplugin.cpp rssfeedmanager.cpp
__um_includes_rssfeedplugin.h = rssfeedplugin.cpp
__um_includes_rssfeedwidget.h = rssfeedplugin.cpp rssfeedmanager.cpp
__um_includes_rssfilter.h = rssfeedplugin.cpp rssfeedmanager.cpp rssfilter.cpp
ktrssfeedplugin_la_SOURCES = rssfeedplugin.cpp rssfeedmanager.cpp rssfeedwidget.ui rssfeed.cpp rssfilter.cpp rssarticle.cpp rssfilter.moc.cpp rssfeedmanager.moc.cpp rssfeedplugin.moc.cpp rssfeed.moc.cpp
.PHONY: all final
